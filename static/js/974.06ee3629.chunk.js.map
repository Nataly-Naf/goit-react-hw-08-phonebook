{"version":3,"file":"static/js/974.06ee3629.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactsList/Contacts.styled.js","components/ContactsList/ContactsList.js","components/FilterForm/FilterForm.styled.js","components/FilterForm/FilterForm.js","components/NameForm/NameForm.styled.js","../node_modules/nanoid/index.browser.js","components/NameForm/NameForm.js","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter],\n(contacts, filter)=>{\n   return contacts.filter(\n  ({ name }) => name.toLowerCase().includes(filter.toLowerCase())\n  )})\n\n\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin-top:10px;\npadding: 0;\nlist-style:none;\n\n`\n\nexport const ListItem = styled.li`\nmargin-top: 10px;\npadding: 0;\nfont-weight: 400;\ncolor: #1a202c;\nfont-size:18px;\n\n\n`\nexport const Number = styled.p`\nmargin-top: 10px;\ndisplay:inline;\npadding: 0;\nfont-weight: 500;\ncolor: #1a202c;\nfont-size:18px;\n\n\n`\nexport const ListBtn = styled.button`\nbackground-color: lightblue;\nmargin-left: 10px;\n\npadding: 0;\nborder-radius: 5px;\nwidth:60px;\nheight:20px;\n  font-size: 12px;\n  font-weight: 700; \n  border:none;\n  outline: solid grey 1px;\n\n  &:hover {\n background-color:lightgreen;\n  }\n\n`","import { useDispatch, useSelector } from 'react-redux';\nimport {  ListBtn, ListItem, Number } from './Contacts.styled';\nimport { deleteContact } from 'redux/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n\n  \n  const dispatch = useDispatch();\n  const handleDelete = (id) => { console.log(id); dispatch(deleteContact(id)) }\n  \n  // const filteredContacts = savedContacts.filter(\n  // ({ name }) => name.toLowerCase().includes(savedFilter.toLowerCase())\n  // )\n  const filteredContacts = useSelector(selectFilteredContacts)\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => {\n        return (\n                    <ListItem key={contact.id}> \n            {contact.name} <Number>{contact.number}</Number>\n            \n            <ListBtn onClick={() => dispatch(handleDelete(contact.id))}>\n              Delete\n            </ListBtn>{' '}\n          </ListItem>        );\n      })}\n    </ul>\n  );\n};\n","const { default: styled } = require(\"styled-components\");\n\nexport const Wrapper = styled.div`\nmargin-top:20px;\nwidth:320px;\n\n`","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Input } from '@chakra-ui/react'\nimport { Wrapper } from './FilterForm.styled';\n\n\nexport const FilterForm = () => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setFilter(value));\n  }, [value, dispatch]);\n\n  const savedFilter = useSelector(selectFilter);\n\n  return (\n    <Wrapper>\n      <p>Find contact by name</p>\n      <Input\n        onChange={event => {\n          setValue(event.target.value);\n        }}\n        type=\"text\"\n        placeholder=\"Find by name\"\n        value={savedFilter}\n      />\n    </Wrapper>\n  );\n};\n","import { Field} from \"formik\";\nimport styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\nmargin-top:50px;\nwidth:320px;\nmargin:0;\npadding: 0;\ndisplay: flex;\nmargin-bottom: 20px;\nflex-direction: column;\ngap:20px;\n\n`\n\nexport const StyledField = styled(Field)`\nborder-radius: 5px;\nwidth: 350px;\nmargin-left: 10px;\n\n`\n\nexport const AddBtn = styled.button`\nbackground-color: lightblue;\npadding: 0;\nborder-radius: 5px;\nwidth:150px;\nheight:30px;\n  font-size: 12px;\n  font-weight: 700; \n  border:none;\n  outline: solid grey 1px;\n  \n\n  &:hover {\n background-color:#3f51b5;\n  }\n\n`","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { Formik, ErrorMessage, Field } from 'formik';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { StyledForm, AddBtn} from './NameForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst formSquema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.number().required('Required'),\n});\nexport const NameForm = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(0);\n  console.log(value);\n  const contacts=useSelector(selectContacts)\n\n\n  const handleInputChange = evt => {\n    const { value, name } = evt.target;\n    setValue({ [name]: value.trim() });\n  };\n\n  const handleSubmit = (values, actions) => {\n     const isInContacts = contacts.find(({ name }) => name.toLowerCase() === values.name.toLowerCase())\n    if (isInContacts) {\n  return alert(`This contact is in your contacts`)\n    } \n      console.log(values);\n\n    values.id = nanoid();\n    dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ id: nanoid(), name: '', phone: '' }}\n      validationSchema={formSquema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <label>\n          {' '}\n          Name\n          <Field\n            name=\"name\"\n            onInput={handleInputChange}\n            placeholder=\"Name\"\n          />\n          <ErrorMessage name=\"name\" />\n        </label>\n\n        <label>\n          {' '}\n          Number\n          <Field\n            name=\"number\"\n            onInput={handleInputChange}\n            placeholder=\"number\"\n          />\n          <ErrorMessage name=\"number\" />\n        </label>\n\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterForm } from 'components/FilterForm/FilterForm';\nimport { NameForm } from 'components/NameForm/NameForm';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <UserMenu />\n      <NameForm />\n      <FilterForm />\n      {isLoading && !error && <b>Loading in progress...</b>}\n      <ContactsList />\n    </div>\n  );\n};\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","_ref","toLowerCase","includes","ListItem","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Number","_templateObject3","ListBtn","_templateObject4","ContactsList","dispatch","useDispatch","filteredContacts","useSelector","_jsx","children","contact","_jsxs","number","onClick","id","console","log","deleteContact","Wrapper","require","default","div","FilterForm","_useState","useState","_useState2","_slicedToArray","setValue","useEffect","setFilter","savedFilter","Input","onChange","event","target","type","placeholder","StyledForm","AddBtn","Field","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","formSquema","Yup","shape","min","max","required","NameForm","handleInputChange","evt","_evt$target","_defineProperty","trim","Formik","initialValues","phone","validationSchema","onSubmit","values","actions","alert","addContact","resetForm","onInput","ErrorMessage","Contacts","fetchContacts","UserMenu"],"sourceRoot":""}