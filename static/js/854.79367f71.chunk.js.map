{"version":3,"file":"static/js/854.79367f71.chunk.js","mappings":"qQAIaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAUzBC,GAAcJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0GAQ3BI,EAAcP,EAAAA,QAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4BAI1BM,EAAST,EAAAA,QAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gP,SCjB7BQ,EAAgB,CAAEC,SAAU,GAAIC,MAAO,GAAIC,SAAU,IACrDC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,SAAUI,EAAAA,KACVH,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaE,IAAI,EAAG,yBAGnBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLb,cAAeA,EACfc,iBAAkBV,EAClBW,SAhBe,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BC,QAAQC,IAAIJ,GACZP,GACEY,EAAAA,EAAAA,IAAS,CACPC,KAAMN,EAAOf,SACbC,MAAOc,EAAOd,MACdC,SAAUa,EAAOb,YAGrBe,GACF,EAM6BN,UAEvBW,EAAAA,EAAAA,MAACnC,EAAU,CAAEoC,aAAa,MAAKZ,SAAA,EAC7BW,EAAAA,EAAAA,MAAC3B,EAAW,CAAC6B,QAAQ,WAAUb,SAAA,CAAC,YAE9BD,EAAAA,EAAAA,KAAClB,EAAW,CAEViC,KAAK,OACLJ,KAAK,WACLK,UAAQ,KAEVhB,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACN,KAAK,mBAGvBC,EAAAA,EAAAA,MAAC3B,EAAW,CAAE6B,QAAQ,QAAOb,SAAA,CAAC,SAE5BD,EAAAA,EAAAA,KAAClB,EAAW,CAEViC,KAAK,QACLJ,KAAK,QACLK,UAAQ,KAEVhB,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACN,KAAK,gBAGvBC,EAAAA,EAAAA,MAAC3B,EAAW,CAAC6B,QAAQ,WAAUb,SAAA,CAAC,YAE9BD,EAAAA,EAAAA,KAAClB,EAAW,CAEViC,KAAK,WACLJ,KAAK,WACLK,UAAQ,KAEVhB,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAAA,GAAY,CAACN,KAAK,mBAGvBX,EAAAA,EAAAA,KAACb,EAAM,CAAE4B,KAAK,SAAQd,SAAC,mBAOjC,EC9Ee,SAASiB,IACtB,OACEN,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACED,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAAlB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAETD,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from \"styled-components\"\n\nimport { Field, Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\nmargin:0;\npadding: 0;\ndisplay: flex;\nmargin-bottom: 20px;\nflex-direction: column;\ngap:20px;\n\n`\n\nexport const StyledField = styled(Field)`\nborder-radius: 5px;\nmargin-left:10px;\nmargin-top: 1opx;\nwidth: 350px;\nmargin-left: 10px;\n\n`\nexport const StyledLabel = styled.label`\nmargin-right: 0;\n`\n\nexport const RegBtn = styled.button`\nbackground-color: lightblue;\npadding: 0;\nborder-radius: 5px;\nwidth:150px;\nheight:30px;\n  font-size: 12px;\n  font-weight: 700; \n  border:none;\n  outline: solid grey 1px;\n  \n  &:hover {\n background-color:#3f51b5;\n  }\n\n`\n\n\n\n\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport {StyledForm, RegBtn, StyledLabel, StyledField } from './RegisterForm.styled';\n \n\n\n\nconst initialValues = { username: '', email: '', password: '' };\nconst schema = Yup.object().shape({\n  username: Yup.string(),\n  email: Yup.string().email(),\n  password: Yup.string().min(7, 'Too short password!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values)\n    dispatch(\n      register({\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n  return (\n    <div >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm  autoComplete=\"off\">\n          <StyledLabel htmlFor=\"username\">\n            Username\n            <StyledField\n             \n              type=\"text\"\n              name=\"username\"\n              required\n            />\n            <span >\n              <ErrorMessage name=\"username\" />\n            </span>\n          </StyledLabel>\n          <StyledLabel  htmlFor=\"email\">\n            Email\n            <StyledField\n              \n              type=\"email\"\n              name=\"email\"\n              required\n            />\n            <span >\n              <ErrorMessage name=\"email\" />\n            </span>\n          </StyledLabel>\n          <StyledLabel htmlFor=\"password\">\n            Password\n            <StyledField\n             \n              type=\"password\"\n              name=\"password\"\n              required\n            />\n            <span >\n              <ErrorMessage name=\"password\" />\n            </span>\n          </StyledLabel>\n          <RegBtn  type=\"submit\">\n            Register\n          </RegBtn>\n        </StyledForm>\n      </Formik>\n    </div>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledField","Field","_templateObject2","StyledLabel","_templateObject3","RegBtn","_templateObject4","initialValues","username","email","password","schema","Yup","shape","min","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","validationSchema","onSubmit","values","_ref","resetForm","console","log","register","name","_jsxs","autoComplete","htmlFor","type","required","ErrorMessage","Register","Helmet"],"sourceRoot":""}